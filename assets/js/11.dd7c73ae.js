(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{365:function(_,t,v){"use strict";v.r(t);var i=v(44),e=Object(i.a)({},(function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"git"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[_._v("#")]),_._v(" Git")]),_._v(" "),v("h2",{attrs:{id:"_1、git-配置命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、git-配置命令"}},[_._v("#")]),_._v(" 1、git 配置命令")]),_._v(" "),v("blockquote",[v("p",[_._v("第一次使用 git，配置用户信息")])]),_._v(" "),v("ul",[v("li",[_._v("配置用户名："),v("code",[_._v('git config --global user.name "your name";')])]),_._v(" "),v("li",[_._v("配置用户邮箱："),v("code",[_._v('git config --global user.email "youremail@github.com";')])])]),_._v(" "),v("blockquote",[v("p",[_._v("ssh")])]),_._v(" "),v("ul",[v("li",[_._v("生成秘钥："),v("code",[_._v('ssh-keygen -t rsa -C "name@email.com"')])]),_._v(" "),v("li",[_._v("多账户添加："),v("code",[_._v("ssh-add ~/.ssh/id_rsa_github")])]),_._v(" "),v("li",[_._v("测试可用性："),v("code",[_._v("ssh -T git@github.com")])])]),_._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v("# ~/.ssh/config 文件\n# 配置github\nHost github.com\n    HostName github.com\n    IdentityFile /root/.ssh/id_rsa_github\n    PreferredAuthentications publickey\n    User xxxx@gmail.com\n")])])]),v("blockquote",[v("p",[_._v("查询配置信息")])]),_._v(" "),v("ul",[v("li",[_._v("列出当前配置："),v("code",[_._v("git config --list;")])]),_._v(" "),v("li",[_._v("列出 repository 配置："),v("code",[_._v("git config --local --list;")])]),_._v(" "),v("li",[_._v("列出全局配置："),v("code",[_._v("git config --global --list;")])]),_._v(" "),v("li",[_._v("列出系统配置："),v("code",[_._v("git config --system --list;")])])]),_._v(" "),v("h2",{attrs:{id:"_2、工作区上的操作命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、工作区上的操作命令"}},[_._v("#")]),_._v(" 2、工作区上的操作命令")]),_._v(" "),v("blockquote",[v("p",[_._v("新建仓库")])]),_._v(" "),v("ul",[v("li",[_._v("将工作区中的项目文件使用 "),v("code",[_._v("git")]),_._v(" 进行管理，即创建一个新的本地仓库："),v("code",[_._v("git init")]),_._v("；")]),_._v(" "),v("li",[_._v("从远程 "),v("code",[_._v("git")]),_._v(" 仓库复制项目："),v("code",[_._v("git clone <url>")]),_._v("，如："),v("code",[_._v("git clone git://github.com/wasd/example.git")]),_._v(";克隆项目时如果想定义新的项目名，可以在 "),v("code",[_._v("clone")]),_._v(" 命令后指定新的项目名："),v("code",[_._v("git clone git://github.com/wasd/example.git mygit")]),_._v("；")])]),_._v(" "),v("blockquote",[v("p",[_._v("提交")])]),_._v(" "),v("ul",[v("li",[_._v("提交工作区所有文件到暂存区："),v("code",[_._v("git add .")])]),_._v(" "),v("li",[_._v("提交工作区中指定文件到暂存区："),v("code",[_._v("git add <file1> <file2> ...")]),_._v(";")]),_._v(" "),v("li",[_._v("提交工作区中某个文件夹中所有文件到暂存区："),v("code",[_._v("git add [dir]")]),_._v(";")])]),_._v(" "),v("blockquote",[v("p",[_._v("撤销")])]),_._v(" "),v("ul",[v("li",[_._v("删除工作区文件，并且也从暂存区删除对应文件的记录："),v("code",[_._v("git rm <file1> <file2>")]),_._v(";")]),_._v(" "),v("li",[_._v("从暂存区中删除文件，但是工作区依然还有该文件:"),v("code",[_._v("git rm --cached <file>")]),_._v(";")]),_._v(" "),v("li",[_._v("取消暂存区已经暂存的文件："),v("code",[_._v("git reset HEAD <file>...")]),_._v(";")]),_._v(" "),v("li",[_._v("撤销上一次对文件的操作："),v("code",[_._v("git checkout --<file>")]),_._v("。要确定上一次对文件的修改不再需要，如果想保留上一次的修改以备以后继续工作，可以使用 stashing 和分支来处理；")]),_._v(" "),v("li",[_._v("隐藏当前变更，以便能够切换分支："),v("code",[_._v("git stash")]),_._v("；")]),_._v(" "),v("li",[_._v("查看当前所有的储藏："),v("code",[_._v("git stash list")]),_._v("；")]),_._v(" "),v("li",[_._v("应用最新的储藏："),v("code",[_._v("git stash apply")]),_._v("，如果想应用更早的储藏："),v("code",[_._v("git stash apply stash@{2}")]),_._v("；重新应用被暂存的变更，需要加上"),v("code",[_._v("--index")]),_._v(" 参数："),v("code",[_._v("git stash apply --index")]),_._v(";")]),_._v(" "),v("li",[_._v("使用 "),v("code",[_._v("apply")]),_._v(" 命令只是应用储藏，而内容仍然还在栈上，需要移除指定的储藏："),v("code",[_._v("git stash drop stash{0}")]),_._v("；如果使用 "),v("code",[_._v("pop")]),_._v(" 命令不仅可以重新应用储藏，还可以立刻从堆栈中清除：git stash pop;")]),_._v(" "),v("li",[_._v("在某些情况下，你可能想应用储藏的修改，在进行了一些其他的修改后，又要取消之前所应用储藏的修改。Git 没有提供类似于 "),v("code",[_._v("stash unapply")]),_._v(" 的命令，但是可以通过取消该储藏的补丁达到同样的效果："),v("code",[_._v("git stash show -p stash@{0} | git apply -R")]),_._v("；同样的，如果你沒有指定具体的某个储藏，Git 会选择最近的储藏："),v("code",[_._v("git stash show -p | git apply -R")]),_._v("；")])]),_._v(" "),v("blockquote",[v("p",[_._v("更新文件")])]),_._v(" "),v("ul",[v("li",[_._v("重命名文件，并将已改名文件提交到暂存区："),v("code",[_._v("git mv [file-original] [file-renamed]")]),_._v(";")])]),_._v(" "),v("blockquote",[v("p",[_._v("查新信息")])]),_._v(" "),v("ul",[v("li",[_._v("查询当前工作区所有文件的状态："),v("code",[_._v("git status")]),_._v(";")]),_._v(" "),v("li",[_._v("比较工作区中当前文件和暂存区之间的差异，也就是修改之后还没有暂存的内容："),v("code",[_._v("git diff")]),_._v("；指定文件在工作区和暂存区上差异比较："),v("code",[_._v("git diff <file-name>")]),_._v(";")])]),_._v(" "),v("h2",{attrs:{id:"_3、暂存区上的操作命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、暂存区上的操作命令"}},[_._v("#")]),_._v(" 3、暂存区上的操作命令")]),_._v(" "),v("blockquote",[v("p",[_._v("提交文件到版本库")])])])}),[],!1,null,null,null);t.default=e.exports}}]);